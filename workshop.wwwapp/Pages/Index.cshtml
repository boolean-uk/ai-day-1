@page
@model IndexModel
@{
    ViewData["Title"] = "Car List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Comic Sans MS', cursive, sans-serif;
            background-color: #f0f8ff;
            color: #333;
        }
        h1 {
            color: #ff4500;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }
        th {
            background-color: #4caf50;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        button {
            background-color: #4caf50;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        form {
            margin-top: 20px;
        }
        input[type="text"], input[type="number"] {
            padding: 10px;
            margin: 5px 0;
            width: calc(100% - 22px);
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h1>Car List</h1>
    <table>
        <thead>
            <tr>
                <th>Make</th>
                <th>Model</th>
                <th>Year</th>
            </tr>
        </thead>
        <tbody id="carTableBody">
            <!-- Car rows will be inserted here by JavaScript -->
        </tbody>
    </table>

    <form id="addCarForm">
        <h2>Add a New Car</h2>
        <input type="text" id="make" placeholder="Make" required>
        <input type="text" id="model" placeholder="Model" required>
        <input type="number" id="year" placeholder="Year" required>
        <button type="submit">Add Car</button>
    </form>

    <script>
        async function fetchCars() {
            try {
                const response = await fetch('https://localhost:7005/api/cars');
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const cars = await response.json();
                const carTableBody = document.getElementById('carTableBody');
                carTableBody.innerHTML = '';
                cars.forEach(car => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${car.make}</td>
                        <td>${car.model}</td>
                        <td>${car.year}</td>
                    `;
                    carTableBody.appendChild(row);
                });
            } catch (error) {
                console.error('Failed to fetch cars:', error);
            }
        }

        async function addCar(event) {
            event.preventDefault();
            const make = document.getElementById('make').value;
            const model = document.getElementById('model').value;
            const year = document.getElementById('year').value;

            try {
                const response = await fetch('https://localhost:7005/api/cars', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ make, model, year })
                });

                if (response.ok) {
                    document.getElementById('addCarForm').reset();
                    fetchCars(); // Refresh the car list
                } else {
                    alert('Failed to add car');
                }
            } catch (error) {
                console.error('Failed to add car:', error);
            }
        }

        document.getElementById('addCarForm').addEventListener('submit', addCar);

        // Fetch cars when the page loads
        window.onload = fetchCars;
    </script>
</body>
</html>
